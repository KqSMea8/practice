<?xml version="1.0"?>
<!--  -->
<project name="increment pack tools (Ant Go!)" basedir="." default="go">

  <property name="lib.dir" value="lib" />  
  <property name="base.dir" value="base" /> 
  <property name="alpha.dir" value="alpha" /> 
  <property name="alpha.debug.dir" value="debug" /> 

  <!--使用JDT 来编译java文件，需要将jdt的jar文件（在tomcat/lib/找到ecj-x.x.x.jar）放到ant的lib目录下-->
  <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />
  
  <property file="build.properties" /> 
  
  <target name="clear">
	<delete dir="${project.name}"></delete>
	<delete dir="${alpha.dir}"></delete>
	<delete dir="${base.dir}"></delete>
  </target>

  <!-- put all *.jar file of svnant in ANT_HOME/lib -->
  <!-- load the svn task -->
  <typedef resource="org/tigris/subversion/svnant/svnantlib.xml"/>
  
  <taskdef name="incrpack" classname="cn.com.upcard.tools.incrpack.AntTypeIncrPack"/>
  <target name="pack">
	<delete dir="${project.name}"></delete>
	<incrpack basepath="${base.dir}" alphapath="${alpha.dir}" alphadebugpath="${alpha.debug.dir}" projectname="${project.name}" fileexts="${pack.file.exts}"></incrpack>
  </target>
  
  <path id="base.classpath.path">
    <fileset id="srcs" dir=".">
        <include name="${base.dir}/src/**/*.java"/>
    </fileset>
  </path>

  <!--只有当目录中含有svn的文件.svn 才对该目录更新到SVN最新版本-->
  <condition property="alpha.svn.dir.exist">  
        <and>  
            <available file="${alpha.dir}/${project.name}/.svn" type="dir"/>  
        </and>  
  </condition> 
  <condition property="base.svn.dir.exist">  
        <and>  
            <available file="${base.dir}/${project.name}/.svn" type="dir"/>  
        </and>  
  </condition>   
 
  <target name="checkout-latest" unless="${alpha.svn.dir.exist}">
    <svn username="${svn.repository.user}" password="${svn.repository.passwd}">
      <checkout url="${svn.latest.url}" revision="HEAD" destPath="${alpha.dir}/${project.name}" />
    </svn>
  </target>

  <target name="checkout-base" unless="${base.svn.dir.exist}">
    <svn username="${svn.repository.user}" password="${svn.repository.passwd}">
      <checkout url="${svn.base.url}" revision="HEAD" destPath="${base.dir}/${project.name}" />
    </svn>
  </target>
  
  <target name="checkout" depends="checkout-base,checkout-latest"/>
  
  
  <!--对原有的svn目录进行版本切换，减少运行时间-->
  <target name="update-base" if="${base.svn.dir.exist}">
	<svn username="${svn.repository.user}" password="${svn.repository.passwd}">
		<switch path="${base.dir}/${project.name}" url="${svn.base.url}" />
	</svn>
  </target>
  
  <target name="update-alpha" if="${alpha.svn.dir.exist}" >
	<svn username="${svn.repository.user}" password="${svn.repository.passwd}" >
		<update dir="${alpha.dir}/${project.name}"  recurse="true" />
	</svn>
  </target>
  
  <target name="update" depends="update-base,update-alpha" />
  
  <!--对于base和alpha 分别进行 debug=false的方式编译，然后根据差异文件，从build-alpha-debug （使用debug=true进行编译） 中获取差异文件进行打包。-->
   <target name="build-base">
        <!-- <echo message="${ant.project.name}: ${ant.file}"/> -->
		<delete dir="${base.dir}/${project.name}/WEB-INF/classes"></delete>
		<mkdir dir="${base.dir}/${project.name}/WEB-INF/classes"></mkdir>
        <javac debug="false" destdir="${base.dir}/${project.name}/WEB-INF/classes" includeantruntime="false" source="${source}" target="${target}" encoding="UTF-8">
            <src path="${base.dir}/${project.name}/src"/>
			<compilerarg line="-nowarn" />  
		    <classpath>
				<fileset dir=".">
					<include name="${base.dir}/${project.name}/WebRoot/WEB-INF/lib/*.jar"/>
				</fileset>
			</classpath>
        </javac>
    </target>
	
	<target name="build-alpha">
       	<delete dir="${alpha.dir}/${project.name}/WEB-INF/classes"></delete>
		<mkdir dir="${alpha.dir}/${project.name}/WEB-INF/classes"></mkdir>
        <javac debug="false"  destdir="${alpha.dir}/${project.name}/WEB-INF/classes" includeantruntime="false" source="${source}" target="${target}" encoding="UTF-8">
            <src path="${alpha.dir}/${project.name}/src"/>
			<compilerarg line="-nowarn" />  
		    <classpath>
				<fileset dir=".">
					<include name="${alpha.dir}/${project.name}/WebRoot/WEB-INF/lib/*.jar"/>
				</fileset>
			</classpath>
        </javac>
    </target>
	
	<target name="build-alpha-debug">
       	<delete dir="${alpha.dir}/${alpha.debug.dir}/${project.name}/WEB-INF/classes"></delete>
		<mkdir dir="${alpha.dir}/${alpha.debug.dir}/${project.name}/WEB-INF/classes"></mkdir>
        <javac debug="true" debuglevel="${debuglevel}" destdir="${alpha.dir}/${alpha.debug.dir}/${project.name}/WEB-INF/classes" includeantruntime="false" source="${source}" target="${target}" encoding="UTF-8">
            <src path="${alpha.dir}/${project.name}/src"/>
			<compilerarg line="-nowarn" />  
		    <classpath>
				<fileset dir=".">
					<include name="${alpha.dir}/${project.name}/WebRoot/WEB-INF/lib/*.jar"/>
				</fileset>
			</classpath>
        </javac>
    </target>

	<tstamp>
		<format property="TODAY" pattern="yyyyMMdd-HHmmss" />
   </tstamp>
	
	<target name="zip">
		<zip destfile="${project.name}-patch-${TODAY}.zip" >
		 <zipfileset dir="${project.name}" prefix="${project.name}"/>
		</zip>
	</target>
	
	<target name="build" depends="build-base,build-alpha,build-alpha-debug" />
	
	<target name="go" depends="checkout,update,build,pack,zip" />
	
	
</project>
